<?xml version="1.0"?>
<!--
    JBoss, Home of Professional Open Source
    Copyright 2014, Red Hat, Inc. and/or its affiliates, and individual
    contributors by the @authors tag. See the copyright.txt in the
    distribution for a full listing of individual contributors.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.jboss.quickstarts.jdg</groupId>
    <artifactId>jboss-eap-datagrid-subsystem</artifactId>
    <version>7.2.0-redhat-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>JBoss JDG Quickstart: jboss-eap-datagrid-subsystem - parent</name>
    <description>eap application: An example that demonstrates how to use the JDG subsystem inside of the EAP configuration.
     An EAP server is configured to use the JDG subsystem to configure caches.
     The simple application shows how to use theses caches with simple injection.
     This POM defines common properties to specify the used versions and plugins.
     The subprojects are built in the appropriate sequence. 
  </description>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <distribution>repo</distribution>
            <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
        </license>
    </licenses>
    <modules>
        <module>web</module>
    </modules>
    <properties>
    <!-- Explicitly declaring the source encoding eliminates the following 
      message: -->
    <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered 
      resources, i.e. build is platform dependent! -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <version.wildfly>10.0.0.Final</version.wildfly>

        <version.jboss.spec.javaee.6.0>3.0.3.Final</version.jboss.spec.javaee.6.0>

        <version.org.infinispan>8.5.0-redhat-SNAPSHOT</version.org.infinispan>
        <!-- version.org.infinispan>8.4.0.Final-redhat-2</version.org.infinispan -->

        <!-- maven-compiler-plugin -->
        <compiler.plugin.version>3.1</compiler.plugin.version>
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.compiler.source>1.8</maven.compiler.source>

        <exec.plugin.version>1.2.1</exec.plugin.version>
        <dependency.plugin.version>2.1</dependency.plugin.version>
        <ejb.plugin.version>2.5.1</ejb.plugin.version>
        <ear.plugin.version>2.10.1</ear.plugin.version>
        <ear.plugin.version>2.10.1</ear.plugin.version>
        <war.plugin.version>3.0.0</war.plugin.version>

        <!---->
        <version.maven.ant.plugin>1.7</version.maven.ant.plugin>
        <version.jboss.spec.javaee.7.0>9.0.1.Final</version.jboss.spec.javaee.7.0>
        <version.buildhelper.maven.plugin>1.7</version.buildhelper.maven.plugin>
        <!-- test dependencies versions -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <browser>phantomjs</browser>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.infinispan</groupId>
                <artifactId>infinispan-bom</artifactId>
                <version>${version.org.infinispan}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- Define the version of JBoss' Java EE 6 APIs we want to import. Any 
              dependencies from org.jboss.spec will have their version defined by this 
              BOM -->
            <!-- JBoss distributes a complete set of Java EE 6 APIs including a Bill 
              of Materials (BOM). A BOM specifies the versions of a "stack" (or a collection) 
              of artifacts. We use this here so that we always get the correct versions 
              of artifacts. Here we use the jboss-javaee-6.0 stack (you can read this as 
              the JBoss stack of the Java EE 6 APIs). You can actually use this stack with 
              any version of JBoss EAP that implements Java EE 6. -->
            <dependency>
                <groupId>org.jboss.spec</groupId>
                <artifactId>jboss-javaee-6.0</artifactId>
                <version>${version.jboss.spec.javaee.6.0}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- Define the version of JBoss' Java EE 7 APIs we want to import.
               Any dependencies from org.wildfly.bom will have their version defined by this
               BOM -->
            <!-- JBoss distributes a complete set of Java EE 7 APIs including
                a Bill of Materials (BOM). A BOM specifies the versions of a "stack" (or
                a collection) of artifacts. We use this here so that we always get the correct
                versions of artifacts. Here we use the jboss-javaee-7-with-tools stack.
                The -with-tools means also versions of other artifacts like Arquillian. -->
            <dependency>
                <groupId>org.wildfly.bom</groupId>
                <artifactId>jboss-javaee-7.0-wildfly-with-tools</artifactId>
                <version>${version.jboss.spec.javaee.7.0}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <!-- export browser property to arquillian.xml -->
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>

        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>${exec.plugin.version}</version>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>skip.tests.by.default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <maven.test.skip>true</maven.test.skip>
            </properties>
        </profile>

        <!-- This profile is for running tests on EAP standalone -->
        <profile>
            <id>tests-eap</id>
            <activation>
                <activeByDefault>false</activeByDefault>
                <!--<property>-->
                <!--<name>eapHome</name>-->
                <!--</property>-->
            </activation>
            <dependencies>
                <dependency>
                    <groupId>org.wildfly.arquillian</groupId>
                    <artifactId>wildfly-arquillian-container-managed</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.jboss.arquillian.protocol</groupId>
                    <artifactId>arquillian-protocol-servlet</artifactId>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <!-- This plugin will add the src/local/java source
                            folder -->
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <version>${version.buildhelper.maven.plugin}</version>
                        <executions>
                            <execution>
                                <id>add-source</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>add-source</goal>
                                </goals>
                                <configuration>
                                    <sources>
                                        <source>src/local/java</source>
                                    </sources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <!--Test only SubsystemTest for standalone mode-->
                            <includes>
                                <include>**/SubsystemTest*</include>
                            </includes>
                            <reportNameSuffix>tests-eap</reportNameSuffix>
                            <systemPropertyVariables>
                                <subsystem.war.directory>${basedir}/target</subsystem.war.directory>
                                <subsystem.war.file>${project.artifactId}.war</subsystem.war.file>
                            </systemPropertyVariables>
                            <systemProperties>
                                <arquillian.launch>jbossas-managed</arquillian.launch>
                            </systemProperties>
                            <!-- Added so selenium doesn't print it's INFO logs to console (there's a LOT of them -
                                 like 5000 lines for each run) - they are instead appended (important when
                                 there are multiple profiles) to <module>/target/jul-info.log (warnings are printed in console) -->
                            <argLine>-Djava.util.logging.config.file=${basedir}/web/src/test/resources/logging.properties</argLine>
                        </configuration>

                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- This profile is for running tests on clustered EAPs -->
        <profile>
            <id>tests-eap-clustered</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>org.wildfly.arquillian</groupId>
                    <artifactId>wildfly-arquillian-container-managed</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.jboss.arquillian.protocol</groupId>
                    <artifactId>arquillian-protocol-servlet</artifactId>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <!-- This plugin will add the src/local/java source
                            folder -->
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <version>${version.buildhelper.maven.plugin}</version>
                        <executions>
                            <execution>
                                <id>add-source</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>add-source</goal>
                                </goals>
                                <configuration>
                                    <sources>
                                        <source>src/local/java</source>
                                    </sources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <!--Test only SubsystemClusteredTest for clustered mode-->
                            <includes>
                                <include>**/SubsystemClusteredTest*</include>
                            </includes>
                            <reportNameSuffix>tests-eap-clustered</reportNameSuffix>
                            <systemPropertyVariables>
                                <subsystem.war.directory>${basedir}/target</subsystem.war.directory>
                                <subsystem.war.file>${project.artifactId}.war</subsystem.war.file>
                            </systemPropertyVariables>
                            <systemProperties>
                                <arquillian.launch>jbossas-cluster</arquillian.launch>
                                <!--<arquillian.launch>clustered-jbossas-managed-1</arquillian.launch>-->
                                <!--<arquillian.launch>clustered-jbossas-managed-2</arquillian.launch>-->
                            </systemProperties>
                            <!-- Added so selenium doesn't print it's INFO logs to console (there's a LOT of them -
                                 like 5000 lines for each run) - they are instead appended (important when
                                 there are multiple profiles) to <module>/target/jul-info.log (warnings are printed in console) -->
                            <argLine>-Djava.util.logging.config.file=${basedir}/web/src/test/resources/logging.properties</argLine>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>

